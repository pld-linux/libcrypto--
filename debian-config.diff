Description: Upstream changes introduced in version 5.6.0-6
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 libcrypto++ (5.6.0-6) unstable; urgency=low
 .
   * Fix sha256 assembly problem with signed address comparison, thanks to
     Ken Raeburn.
     (Closes: #585930)
   * Converted to dpkg-source format 3.0 (quilt).
   * Use mercurial-buildpackage for repository maintenance, so old
     repository does not exist any more.
   * Bumped Standards-Version to 3.8.4, no change.
   * Use misc:Depends debhelper macro for all packages.
 .
 The person named in the Author field signed this changelog entry.
Author: Jens Peter Secher <jps@debian.org>
Bug-Debian: http://bugs.debian.org/585930

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

Index: libcrypto++/config.h
===================================================================
--- libcrypto++.orig/config.h	2010-08-09 20:42:43.000000000 +0200
+++ libcrypto++/config.h	2010-08-09 20:43:10.000000000 +0200
@@ -1,18 +1,16 @@
+/* config.h.  Generated from config.h.in by configure.  */
+// Debian note: This is a copy of the original config.h file except for the two
+// endianness undefs below; they are substituted by the autoconf process
+// according to the build architecture.
+
 #ifndef CRYPTOPP_CONFIG_H
 #define CRYPTOPP_CONFIG_H
 
 // ***************** Important Settings ********************
 
-// define this if running on a big-endian CPU
-#if !defined(IS_LITTLE_ENDIAN) && (defined(__BIG_ENDIAN__) || defined(__sparc) || defined(__sparc__) || defined(__hppa__) || defined(__MIPSEB__) || defined(__ARMEB__) || (defined(__MWERKS__) && !defined(__INTEL__)))
-#	define IS_BIG_ENDIAN
-#endif
-
-// define this if running on a little-endian CPU
-// big endian will be assumed if IS_LITTLE_ENDIAN is not defined
-#ifndef IS_BIG_ENDIAN
-#	define IS_LITTLE_ENDIAN
-#endif
+// Endianness
+/* #undef IS_BIG_ENDIAN */
+#define IS_LITTLE_ENDIAN /**/
 
 // define this if you want to disable all OS-dependent features,
 // such as sockets and OS-provided random number generators
